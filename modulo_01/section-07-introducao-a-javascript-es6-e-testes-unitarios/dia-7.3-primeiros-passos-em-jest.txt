#TESTES:

#COMO CRIAR O ARQUIVO DE TESTES:

- entrar no repositório que vai ter o projeto.
- comando: npm init -y
- abrir o vs code: code .
- mudar o valor da chave 'test' para 'jest'.
- voltar ao terminal.
- comando: npm install --save-dev jest

#COMO FAZER OS TESTES:

- module.exports = function = ele exporta a função para o arquivo de testes.
ex:
module.exports = function 
module.exports = {function, function, function} 

- require = no arquivo de teste ele busca o arquivo '.js' a ser testado.
ex:
const sum = require('./sum.js')
const {
function,
function,
function,
} = require('./nomeDoArquivo.js')

- it ou test = vai fazer uma função teste para testar a função do arquivo principal.
ex:
test('soma dois valores', () => {
  expect(sum(2, 3)).toBe(5);
});

ou

it("greetingMessage() retorna uma mensagem no formato: `Hello, ${user}! Que bom ter você de volta`", () => {
    expect(greetingMessage("Lucas")).toBe(
      "Hello, Lucas! Que bom ter você de volta"
    );
});

- expect = faz o teste colocando parâmetros na função.
ex:
expect(greetingMessage("Lucas")).toBe(
   "Hello, Lucas! Que bom ter você de volta"
);

- toBe = o resultado que é esperado.
ex:
.toBe("Hello, Lucas! Que bom ter você de volta")
- DICA: ELE É USADO APENAS PARA TIPOS PRIMITIVOS COMO: BOOLEAN, NUMBER, STRING.

- toEqual = o resultado que é esperado. 
ex:
.toEqual("Hello, Lucas! Que bom ter você de volta")
- DICA: ELE É USADO APENAS PARA OBJETOS COMO: OBJETOS, ARRAY, FUNÇÃO.
